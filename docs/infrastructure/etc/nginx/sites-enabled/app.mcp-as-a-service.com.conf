server {

    server_name app.mcp-as-a-service.com;

    resolver 8.8.8.8 valid=30s;

    charset utf-8;

    client_max_body_size 50M;

    access_log /var/log/nginx/app.mcp-as-a-service.com.access.log combined gzip buffer=4k flush=5m;
    error_log /var/log/nginx/app.mcp-as-a-service.com.error.log;

    root /var/www/prod/playwright-mcp-cloud-webapp/public;
    index index.php;

    location /nginx_status {
        auth_basic "Login required";
        auth_basic_user_file /etc/nginx/htpasswd;

        stub_status on;
        access_log off;
        allow all;
        deny all;
    }

    location /fpm_status {
        auth_basic "Login required";
        auth_basic_user_file /etc/nginx/htpasswd;

        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_pass unix:/var/run/php/php8.4-fpm.sock;
    }

    location /munin {
        auth_basic "Login required";
        auth_basic_user_file /etc/nginx/htpasswd;

        alias /var/cache/munin/www;
        index index.html;
    }

    location ~ /\. { deny all; }

    set $auth_basic off;

    if ($uri ~ "^/_profiler") {
        set $auth_basic "Login required";
    }

    if ($uri ~ "^/phpinfo") {
        set $auth_basic "Login required";
    }

    location / {
        try_files $uri /index.php$is_args$args;
    }

    location ~ \.php$ {
        auth_basic $auth_basic;
        auth_basic_user_file /etc/nginx/htpasswd;

        include snippets/fastcgi-php.conf;
        fastcgi_param APP_ENV "prod";
        fastcgi_hide_header Forwarded;
        fastcgi_pass unix:/var/run/php/php8.4-fpm.sock;
    }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/app.mcp-as-a-service.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/app.mcp-as-a-service.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = app.mcp-as-a-service.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



    server_name app.mcp-as-a-service.com;

    listen 80;
    listen [::]:80;
    return 404; # managed by Certbot
}
