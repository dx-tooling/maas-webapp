# MCP Instance Types Configuration (Examples and documentation)
#
# Schema overview:
# mcp_instance_types:                       # required
#   <instanceTypeKey>:                      # must match App\McpInstances\Domain\Enum\InstanceType values
#     display_name: <string>                # required, shown in UI
#     description: <string>                 # required, shown in UI tiles
#     docker:                               # optional
#       image: <string>                     # optional, overrides derived name
#       env:                                # optional map<string,string>, extra env passed to container
#         SOME_ENV: "value"
#     required_user_env_vars:               # optional map<string,string>, required user env vars with descriptions
#       REQUIRED_VAR: "Description of what this variable is for"
#     endpoints:                            # required map keyed by endpoint id (e.g., mcp, vnc, ...)
#       <endpointId>:                       # id also defines the first subdomain segment
#         port: <int>                       # required internal container port for this endpoint
#         auth: <string|null>               # optional, e.g., "bearer" to enable ForwardAuth; omit or null for none
#         external_paths:                   # required list of external URL paths to show in UI
#           - "/path"
#         health:                           # optional
#           http:                           # optional
#             path: "/health-or-root"     # required when http present; must start with '/'
#             accept_status_lt: 500         # optional int in [100..599], default 500
#
# Conventions used by the app:
# - Hostnames are derived as: <endpointId>-<instanceSlug>.<rootDomain>
# - Traefik labels are generated from endpoints; ForwardAuth applies when auth == "bearer" (or for endpointId == "mcp").
# - The presence of an endpoint with id "mcp" is required for each instance type.

mcp_instance_types:
    # Example legacy type (fully specified)
    _legacy:
        display_name: "Legacy Playwright MCP"
        docker:
            # image: "maas-mcp-instance"    # optional override; default derives from type
            # env:
            #     EXTRA_FLAG: "1"         # optional extra env vars
        endpoints:
            mcp:
                port: 8080
                auth: bearer               # enable ForwardAuth
                external_paths: ["/mcp", "/sse"]
                health:
                    http:
                        path: "/mcp"
                        accept_status_lt: 500
            vnc:
                port: 6080
                # auth: null              # unauthenticated by default
                external_paths: ["/vnc.html"]
                health:
                    http:
                        path: "/"
                        accept_status_lt: 500

    # Example non-legacy type (playwright-v1)
    playwright-v1:
        display_name: "Playwright MCP v1"
        docker:
            # image: "maas-mcp-instance-playwright-v1"  # optional override; default derives from type
        endpoints:
            mcp:
                port: 8080
                auth: bearer
                external_paths: ["/mcp", "/sse"]
                health:
                    http:
                        path: "/mcp"
                        accept_status_lt: 500
            vnc:
                port: 6080
                external_paths: ["/vnc.html"]
                health:
                    http:
                        path: "/"
                        accept_status_lt: 500

    # Example with required user environment variables (metabase-v1)
    metabase-v1:
        display_name: "Metabase MCP v1"
        description: "A Metabase MCP instance which allows an AI agent to interact with Metabase dashboards and queries through the MCP protocol."
        docker:
            image: "maas-mcp-instance-metabase-v1"
        required_user_env_vars:
            METABASE_URL: "The base URL of your Metabase instance (e.g., https://metabase.example.com)"
            METABASE_API_KEY: "Your Metabase API key for authentication"
        endpoints:
            mcp:
                port: 8080
                auth: bearer
                external_paths: ["/mcp"]
                health:
                    http:
                        path: "/health"
                        accept_status_lt: 201
            vnc:
                port: 6080
                external_paths: ["/vnc.html"]
                health:
                    http:
                        path: "/"
                        accept_status_lt: 500
