# Common proxy settings
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header Connection '';
proxy_http_version 1.1;
proxy_buffering off;
proxy_cache off;
proxy_read_timeout 86400s;
proxy_send_timeout 86400s;

# Include the dynamic instance configurations
include /etc/nginx/playwright-mcp-mappings.conf;

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;

# Logging format
log_format detailed '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    '"$http_authorization"';

# Health check endpoint
server {
    listen 80;
    # If using HTTPS (recommended), uncomment these lines:
    # listen 443 ssl;
    # ssl_certificate /path/to/cert.pem;
    # ssl_certificate_key /path/to/key.pem;

    server_name 127.0.0.1;  # Replace with your domain or IP

    # Access and error logs
    access_log /var/log/nginx/playwright-mcp-proxy.access.log detailed;
    error_log /var/log/nginx/playwright-mcp-proxy.error.log;

    # CORS settings
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    location /health {
        limit_req zone=general burst=20 nodelay;
        return 200 'OK';
        add_header Content-Type text/plain;
    }

    location /status {
        limit_req zone=general burst=20 nodelay;
        stub_status on;
        access_log off;
        allow 127.0.0.1;  # Only allow local access
        deny all;
    }

    # Default error page
    error_page 400 401 403 404 500 502 503 504 /error.html;
    location = /error.html {
        internal;
        return 200 '{"error": "$status"}';
        add_header Content-Type application/json;
    }
}
